<launch>
    <let name="urdf_path" 
         value="$(find-pkg-share my_turtlebot3_description)/urdf/my_robot.urdf.xacro" />

    <let name="rviz_config_path"
         value="$(find-pkg-share my_turtlebot3_bringup)/rviz/my_turtlebot_config.rviz" />

    <!-- Create a Robot -->
    <node pkg="robot_state_publisher" exec="robot_state_publisher">
        <param name="robot_description"
            value="$(command 'xacro $(var urdf_path)')" />
    </node>

    <!-- Gazebo World -->
    <include file="$(find-pkg-share gazebo_ros)/launch/gazebo.launch.py">
        <arg name="world" value="$(find-pkg-share my_turtlebot3_bringup)/worlds/square_world.world" />
    </include>

    <!-- Spawn Robot in Gazebo World -->
    <node pkg="gazebo_ros" exec="spawn_entity.py"
        args="-topic robot_description -entity my_turtlebot" />

    <!-- RVIZ -->
    <node pkg="rviz2" exec="rviz2" output="screen" 
          args="-d $(var rviz_config_path)" />

    <!-- ROS2 Code -->
    <node pkg="dyno_control" exec="pipeline_node.py" name="dyno_control_pipeline">
        <param name="use_sim_time" value="True" />
    </node>

    <!-- Gazebo Landmark to TF tree Publisher -->
    <node pkg="dyno_control" exec="gazebo_landmark_tf_broadcaster.py" name="landmark_tf_broadcaster" output="screen">
        <param name="use_sim_time" value="True" />
    </node>

    <!-- Gazebo Sensor simulation - Landmark Publisher -->
    <node pkg="dyno_control" exec="gazebo_sensor_simulator.py" name="sensor_simulator" output="screen">
        <param name="use_sim_time" value="True" />
    </node>

</launch>